@model List<Survey.Models.BigModel>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    int k = 0;
}


<h1>
    Create online survey
</h1>


@using (Html.BeginForm())
{
    <div class="field">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="tabs">
                    <h1>
                        Create a title for the survey
                    </h1>

                   
                        <div class="col-md-6">
                            @Html.EditorFor(x => x[k].AllSurvey.Title, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x[k].AllSurvey.Title) } })
                            @Html.ValidationMessageFor(x => x[k].AllSurvey.Title, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(x => x[k].AllSurvey.Description, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x[k].AllSurvey.Description) } })
                            @Html.ValidationMessageFor(x => x[k].AllSurvey.Description, "", new { @class = "text-danger" })
                        </div>
                     
                    
                </div>
            </div>
        <h1>
            Create sample questions and answers
        </h1>
        <div id="dataTable" class="tabs">
            <div class="accordion accordion-toggle-arrow" id="accordionExample1">
                <div class="card">
                    <div class="card-header">
                        <div class="card-title" data-toggle="collapse" data-target="#collapse1">
                            Câu hỏi
                        </div>
                    </div>
                    <div id="collapse1" class="collapse show" data-parent="#accordionExample1">
                        <div class="card-body">
                            @if (Model != null && Model.Count > 0)
                            {

                                int j = 0;
                                foreach (var i in Model)
                                {
                                    <div>

                                        <div class="col-md-10">@Html.EditorFor(a => a[j].Question.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })</div>
                                        <div class="col-md-10">@Html.EditorFor(a => a[j].Question.Type, new { htmlAttributes = new { @class = "form-control", placeholder = "Type" } })</div>
                                        <div class="col-md-10">@Html.EditorFor(a => a[j].Question.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })</div>
                                        <div class="col-md-10">@Html.EditorFor(a => a[j].QuestionAnswer.Answer, new { htmlAttributes = new { @class = "form-control", placeholder = "Answer" } })</div>
                                        <div>
                                            @if (j > 0)
                                            {
                                                <a href="#" class="remove">Remove</a>
                                            }
                                        </div>
                                    </div>
                                    j++;
                                }
                            }

                        </div>
                    </div>
                </div>


            </div>
            <div><a href="#" id="addNew">+ Thêm Câu hỏi</a></div>
        </div>

    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}




<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script language="javascript">
        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
               
                e.preventDefault();
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("#accordionExample1"); // tìm id accordionExample1
                var $trNew = $trLast.clone();  //nhân bản

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                console.log(suffix);
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);
            });

        

        });
    </script>
}
